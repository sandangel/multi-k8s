version: 2.1
orbs:
  gcp-cli: circleci/gcp-cli@1.3.0

commands:
  initialize_gcloud:
    description: Initilize the gcloud CLI
    steps:
    - run: |
        echo $GCLOUD_SERVICE_KEY | base64 --decode >> ${HOME}/gcloud-service-key.json
        gcloud auth configure-docker --quiet
        gcloud auth activate-service-account --quiet --key-file=${HOME}/gcloud-service-key.json
        gcloud --quiet config set project $GOOGLE_PROJECT_ID
        gcloud --quiet config set compute/zone $GOOGLE_COMPUTE_ZONE

  build_image:
    description: Build a docker image
    parameters:
      registry-url:
        description: The GCR registry URL from ['', us, eu, asia].gcr.io
        type: string
        default: asia.gcr.io
      image:
        description: A name for your docker image
        type: string
      tag:
        description: A docker image tag
        type: string
        default: "latest"
      latest_tag:
        description: Tag image with latest
        type: boolean
        default: false
      path-to-dockerfile:
        description: The relative path to the Dockerfile to use when building image
        type: string
        default: "."
    steps:
      - run:
          name: Build docker image
          command: >
            docker build -t <<parameters.registry-url>>/$GOOGLE_PROJECT_ID/<<parameters.image>>:<<parameters.tag>>
            <<# parameters.latest_tag >>
            -t <<parameters.registry-url>>/$GOOGLE_PROJECT_ID/<<parameters.image>>:latest
            <</ parameters.latest_tag >>
            <<parameters.path-to-dockerfile>>

  push_image:
    description: "Push a container image to the GCR registry"
    parameters:
      registry-url:
        description: The GCR registry URL from ['', us, eu, asia].gcr.io
        type: string
        default: asia.gcr.io
      image:
        description: A name for your docker image
        type: string
      tag:
        description: A docker image tag
        type: string
        default: "latest"
      latest_tag:
        description: Push latest image
        type: boolean
        default: false
    steps:
      - run:
          name: Push image to GCR
          command: |
            docker push <<parameters.registry-url>>/$GOOGLE_PROJECT_ID/<<parameters.image>>:<<parameters.tag>>
      - when:
          condition: <<parameters.latest_tag>>
          steps:
            - run: docker push <<parameters.registry-url>>/$GOOGLE_PROJECT_ID/<<parameters.image>>:latest

executors:
  google:
    description: The official Google docker container with gcloud SDK pre-installed
    docker:
      - image: google/cloud-sdk
    environment:
      CLOUDSDK_CORE_DISABLE_PROMPTS: "1"

jobs:
  build_and_push_to_gcr:
    executor: google
    parameters:
      path-to-dockerfile:
        description: The relative path to the Dockerfile to use when building image
        type: string
        default: "."
      image:
        description: A name for your docker image
        type: string
      tag:
        description: A docker image tag
        type: string
        default: "latest"
      latest_tag:
        description: Build and push with latest tag
        type: boolean
        default: false
    steps:
      - checkout
      - initialize_gcloud
      - setup_remote_docker
      - build_image:
          image: <<parameters.image>>
          tag: <<parameters.tag>>
          latest_tag: <<parameters.latest_tag>>
          path-to-dockerfile: <<parameters.path-to-dockerfile>>
      - push_image:
          image: <<parameters.image>>
          tag: <<parameters.tag>>
          latest_tag: <<parameters.latest_tag>>

  deploy:
    executor: google
    steps:
      - checkout
      - initialize_gcloud
      - run: |
          gcloud components update kubectl
          gcloud container clusters get-credentials multi-cluster
      - run: |
          kubectl apply -f k8s
          kubectl set image deployments/server-deployment server=asia.gcr.io/$GOOGLE_PROJECT_ID/multi-server:$SHORT_SHA
          kubectl set image deployments/client-deployment client=asia.gcr.io/$GOOGLE_PROJECT_ID/multi-client:$SHORT_SHA
          kubectl set image deployments/worker-deployment worker=asia.gcr.io/$GOOGLE_PROJECT_ID/multi-worker:$SHORT_SHA

workflows:
  version: 2
  build_and_deploy_to_gcloud:
    jobs:
      - build_and_push_to_gcr:
          name: build-worker
          image: multi-worker
          tag: $(echo $CIRCLE_SHA1 | cut -c -7)
          latest_tag: true
          path-to-dockerfile: ./worker
      - build_and_push_to_gcr:
          name: build-server
          image: multi-server
          tag: $(echo $CIRCLE_SHA1 | cut -c -7)
          latest_tag: true
          path-to-dockerfile: ./server
      - build_and_push_to_gcr:
          name: build-client
          image: multi-client
          tag: $(echo $CIRCLE_SHA1 | cut -c -7)
          latest_tag: true
          path-to-dockerfile: ./client
      - deploy:
          requires:
            - build-client
            - build-server
            - build-worker
